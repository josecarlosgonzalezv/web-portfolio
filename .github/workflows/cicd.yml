name: Portfolio CI/CD
run-name: CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  portfolio-build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'pnpm'
      - name: Check linting
        run: |
          pnpm i
          pnpm run lint:checker
          pnpm run prettier:checker
      - name: Install dependencies and build
        run: |
          pnpm i
          pnpm run build
      - name: Get package.json version
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        id: get_version
        run: echo "::set-output name=VERSION::$(node -p -e "require('./package.json').version")"
      - name: Check if release exists
        id: check_release
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        uses: actions/github-script@v4
        with:
          script: |
            const releases = await github.repos.listReleases({
              owner: context.repo.owner,
              repo: context.repo.repo
            });
            const existingRelease = releases.data.find(r => r.tag_name === `v${{ steps.get_version.outputs.VERSION }}`);
            return !!existingRelease;
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Create release tag and release
        id: create_release
        if: github.ref == 'refs/heads/main' && github.event_name == 'push' && steps.check_release.outputs.result != 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git fetch --tags
          TAG_NAME="v${{ steps.get_version.outputs.VERSION }}"
          if git rev-parse -q --verify "refs/tags/${TAG_NAME}"; then
            echo "Tag ${TAG_NAME} already exists. Skipping tag creation."
          else
            git tag -a "${TAG_NAME}" -m "Portfolio ${TAG_NAME}"
            git push origin "${TAG_NAME}"
            echo "::set-output name=release_created::true"
          fi
      - name: Create Release
        if: github.ref == 'refs/heads/main' && steps.create_release.outputs.release_created == 'true'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.get_version.outputs.VERSION }}
          release_name: Portfolio v${{ steps.get_version.outputs.VERSION }}
          draft: false
          prerelease: false
      - name: Deploy to GH Pages
        if: github.ref == 'refs/heads/main' && steps.create_release.outputs.release_created == 'true'
        uses: peaceiris/actions-gh-pages@v4
        with:
          personal_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist
          publish_branch: gh-pages
