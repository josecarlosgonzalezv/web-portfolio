name: Portfolio CI/CD
run-name: CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '22'
      - name: Install dependencies
        run: npm ci
      - name: Build
        run: npm run build
  build-and-deploy:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '22'
      - name: Install dependencies
        run: npm ci
      - name: Build
        run: npm run build
      - name: Create package
        run: npm pack
        id: npm_pack
      - name: Deploy to GH Page
        uses: peaceiris/actions-gh-pages@v4
        with:
          personal_token: ${{ secrets.PERSONAL_TOKEN }}
          publish_dir: ./dist
          publish_branch: gh-pages
      - name: Get package.json version
        run: echo "VERSION=$(node -p -e \"require('./package.json').version\")" >> $GITHUB_ENV
      - name: Set git config
        run: |
          git config --global user.email "josecarlos.gonzalezvillegas1@lumen.com"
          git config --global user.name "josecarlosgonzalezv"
      - name: Create release tag
        run: |
          git tag -a "v${{ env.VERSIONN }}" -m "Portfolio v${{ env.VERSIONN }}"
          git push origin "v${{ env.VERSIONN }}"
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_TOKEN }}
        with:
          tag_name: v${{ env.VERSION }}
          release_name: Release v${{ env.VERSION }}
          body: |
            Release notes for version ${{ env.VERSION }}.
          draft: false
          prerelease: false
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.npm_pack.outputs.package }}
          asset_name: $(basename ${{ steps.npm_pack.outputs.package }})
          asset_content_type: application/gzip